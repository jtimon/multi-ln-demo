version: '3.6'

networks:
  backend-network:
    driver: bridge

services:

  demo:
    build:
      context: ../
      dockerfile: docker/py-demo.Dockerfile
    entrypoint: "/wd/docker/entrypoint-py-demo.sh"
    environment:
      PYDEMO_PROCFILE: ${PYDEMO_PROCFILE}
    depends_on:
      - bitcoind_regtest
      - bitcoind_chain_2
      - bitcoind_chain_3
      - lightningds
      - gateway
    volumes:
      - "clightning_datadir:/wd/daemon-data"
    networks:
      - backend-network

  gateway:
    build:
      context: ../
      dockerfile: "docker/py-gateway.Dockerfile"
    entrypoint: "/wd/docker/entrypoint-py-gateway.sh"
    depends_on:
      - db
      - bitcoind_regtest
      - bitcoind_chain_2
      - bitcoind_chain_3
      - lightningds
    volumes:
      - "clightning_datadir:/wd/daemon-data"
    ports:
      - "5000:5000"
    expose:
      - "5000"
    networks:
      - backend-network

  bitcoind_regtest:
    build:
      context: ../
      dockerfile: docker/bitcoind.Dockerfile
    entrypoint: "/wd/docker/entrypoint-bitcoind.sh"
    environment:
      BITCOIND_CALL: "bitcoind -chain=regtest -conf=/wd/conf/bitcoind.conf -datadir=/wd/daemon-data/regtest_bitcoind/"
    ports:
      - "18515:18515"
    expose:
      - "18515"
    networks:
      - backend-network

  bitcoind_chain_2:
    build:
      context: ../
      dockerfile: docker/bitcoind.Dockerfile
    entrypoint: "/wd/docker/entrypoint-bitcoind.sh"
    environment:
      BITCOIND_CALL: "bitcoind -chain=chain_2 -conf=/wd/conf/bitcoind.conf -datadir=/wd/daemon-data/chain_2_bitcoind/"
    ports:
      - "18555:18555"
    expose:
      - "18555"
    networks:
      - backend-network

  bitcoind_chain_3:
    build:
      context: ../
      dockerfile: docker/bitcoind.Dockerfile
    entrypoint: "/wd/docker/entrypoint-bitcoind.sh"
    environment:
      BITCOIND_CALL: "bitcoind -chain=chain_3 -conf=/wd/conf/bitcoind.conf -datadir=/wd/daemon-data/chain_3_bitcoind/"
    ports:
      - "18565:18565"
    expose:
      - "18565"
    networks:
      - backend-network

  lightningds:
    build:
      context: ../
      dockerfile: docker/clightning.Dockerfile
    entrypoint: "/wd/docker/entrypoint-lightningd.sh"
    depends_on:
      - bitcoind_regtest
      - bitcoind_chain_2
      - bitcoind_chain_3
    environment:
      LIGHTNINGD_PROCFILE: ${LIGHTNINGD_PROCFILE}
    volumes:
      - "clightning_datadir:/wd/daemon-data"
    networks:
      - backend-network

  db:
    image: postgres:11.1
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gateway_db
    restart: on-failure
    networks:
      - backend-network

volumes:
  clightning_datadir:
